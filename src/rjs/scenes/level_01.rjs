import 'Pillar', '../objects/mainlev/pillar'
import 'Wall', '../objects/mainlev/wall'
import 'GrottoTile', '../objects/grotto_tile'

import "*", as: "level_01_json", from: "../../../src/maps/level_01.json"

export default class Level01 < Level
  def initialize
    super
    @sprite_ready_handler = lambda { |s| sprite_ready(s) }

    @scale = 1.3
  end

  def ready()
    @grotto = GrottoTile.new
    @grotto.connect GrottoTile::SPRITE_READY, @sprite_ready_handler
    self.add @grotto, 'grotto'

    @tile_ids = level_01_json.layers[0].data
    @size_w = level_01_json.width
    @size_h = level_01_json.height

    self.position = Vector2.new(-(@size_w * @scale * @grotto.size.w) / 2,
                                -(@size_h * @scale * @grotto.size.h) / 2)
    super
  end

  def sprite_ready sprites
    dimension = Vector2.new(@size_w, @size_h)
    Level.dimension_loop(dimension) do |vec, i|
      id = @tile_ids[i] + level_01_json.compressionlevel

      sprite = Sprite.new sprites[id]
      sprite.img = @grotto.img
      @grotto.add sprite, "grotto_#{i}"
      sprite.scale = @scale
      sprite.position = Vector2.new(vec.x * @grotto.size.x * sprite.scale,
                                    vec.y * @grotto.size.y * sprite.scale)
    end

    @grotto.update_global_position()
  end

  def free
    @grotto.disconnect GrottoTile::SPRITE_READY, @sprite_ready_handler
    super
  end
end
