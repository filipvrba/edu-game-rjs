export default class GrottoTile < Object2D
  SPRITE_READY = "gtspr"

  attr_reader :img, :size, :sprites

  def ready()
    @size    = Vector2.new 16, 16
    @img     = this.get_scene(true).find_child('images').grotto_tile
    @sprites = nil
  end

  def update dt
    # You need to wait until the functions are
    # synchronized because the image has a delay.
    unless @img.width == 0 and @img.height == 0
      if @sprites == nil
        @sprites = generate_s_sprites @size
        self.emit_signal SPRITE_READY, @sprites
      end
    end
  end

  def get_s_sprite id
    return @s_sprites[id]
  end

  def generate_s_sprites size
    w_img = @img.width
    h_img = @img.height

    size_w = w_img / size.w
    size_h = h_img / size.h

    result_h = { }
    i = 0
    (0...size_h).step(1) do |y|
      (0...size_w).step(1) do |x|
        position_vec = Vector2.new(x * size.x, y * size.y)
        result_h[i] = SSprite.new(position_vec, size)
        i += 1
      end
    end
    
    return result_h
  end
end
