import 'Scenes', '../objects/scenes'

export default class LevelAnimations < AnimationPlayer
  def player
    self.parent.find_child("player")
  end

  def initialize
    super
  end

  def ready()
    
    level_size = Vector2.new(self.parent.level_size.x, self.parent.level_size.y)

    tile = self.parent.level_tiles.find_child("sprite_l0_i0")
    grotto = self.parent.level_tiles.find_child("t_grotto")
    tile_zero = tile.global_position
    root_point = tile_zero.clone.sub(self.parent.global_position)

    animation = SAnimation.new
    t_player_x = animation.add_track('player.position.x')
    t_player_x.add_insert_key(0, root_point.x + (grotto.size.w * tile.scale))

    t_player_y = animation.add_track('player.position.y')
    t_player_y.add_insert_key(0, root_point.y + (grotto.size.h * tile.scale) * 3)
    self.add_animation(Scenes::IDLE_C, animation)

    animation = SAnimation.new
    t_player_x = animation.add_track('player.position.x')
    t_player_x.add_insert_key(0, root_point.x + (grotto.size.w * tile.scale))
    # t_player_x.add_insert_key(1, root_point.x + (grotto.size.w * tile.scale))
    t_player_x.add_insert_key(1, root_point.x + (grotto.size.w * tile.scale) * 2.5)

    t_player_y = animation.add_track('player.position.y')
    t_player_y.add_insert_key(0, root_point.y + (grotto.size.h * tile.scale) * 3)
    self.add_animation(Scenes::MOVE_TO_L, animation)
    
    animation = SAnimation.new
    t_player_x = animation.add_track('player.position.x')
    t_player_x.add_insert_key(0, root_point.x + (grotto.size.w * tile.scale) * 2.5)

    t_player_y = animation.add_track('player.position.y')
    t_player_y.add_insert_key(0, root_point.y + (grotto.size.h * tile.scale) * 3)
    t_player_y.add_insert_key(4, root_point.y + (grotto.size.h * tile.scale) * 11)
    self.add_animation(Scenes::MOVE_D_L, animation)

    animation = SAnimation.new
    t_player_x = animation.add_track('player.position.x')
    t_player_x.add_insert_key(0, root_point.x + (grotto.size.w * tile.scale) * 2.5)
    t_player_x.add_insert_key(1, root_point.x + (grotto.size.w * tile.scale) * 2.5)
    t_player_x.add_insert_key(4, root_point.x + (grotto.size.w * tile.scale) * 9.5)

    t_player_y = animation.add_track('player.position.y')
    t_player_y.add_insert_key(0, root_point.y + (grotto.size.h * tile.scale) * 11)
    self.add_animation(Scenes::MOVE_TO_B, animation)

    self.play(Scenes::IDLE_C)
  end
end
